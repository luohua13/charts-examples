apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "consul-client.fullname" . }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-95"
  labels:
{{ include "consul-client.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "consul-client.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "consul-client.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      hostNetwork: true
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          env:
          - name: TSF_NODE1
            value: "{{ .Values.global.node_list.one }}"
          - name: TSF_NODE2
            value: "{{ .Values.global.node_list.two }}"
          - name: TSF_NODE3
            value: "{{ .Values.global.node_list.three }}"
          - name: SYSTEMD_IGNORE_CHROOT
            value: "1"
          volumeMounts:
          - mountPath: "{{ .Values.global.volumes_root_hostpath.hostPath.path }}"
            name: "{{ .Values.global.volumes_root_hostpath.name }}"
            readOnly: false
          - mountPath: "{{ .Values.global.volumes_fscgroup_hostpath.hostPath.path }}"
            name: "{{ .Values.global.volumes_fscgroup_hostpath.name }}"
            readOnly: true
          - mountPath: "{{ .Values.global.volumes_cacerts_hostpath.hostPath.path }}"
            name: "{{ .Values.global.volumes_cacerts_hostpath.name }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
#          ports:
#            - name: http
#              containerPort: 8500
#              protocol: TCP
#          readinessProbe:
#            httpGet:
#              port: 8500
#              path: /v1/health/state/critical
#            initialDelaySeconds: 20
#            periodSeconds: 15
          securityContext:
            privileged: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: "{{ .Values.global.volumes_root_hostpath.name }}"
        hostPath:
          path: "{{ .Values.global.volumes_root_hostpath.hostPath.path }}"
          type: DirectoryOrCreate
      - name: "{{ .Values.global.volumes_fscgroup_hostpath.name }}"
        hostPath:
          path: "{{ .Values.global.volumes_fscgroup_hostpath.hostPath.path }}"
          type: DirectoryOrCreate
      - name: "{{ .Values.global.volumes_cacerts_hostpath.name }}"
        hostPath:
          path: "{{ .Values.global.volumes_cacerts_hostpath.hostPath.path }}"
          type: DirectoryOrCreate
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
