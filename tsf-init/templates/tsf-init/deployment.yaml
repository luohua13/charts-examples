apiVersion: apps/v1
kind: Deployment
metadata:
  name: tsf-init
spec:
  replicas: {{ .Values.init.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: tsf-init
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tsf-init
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.init.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      hostNetwork: true
      serviceAccountName: tsf-sa
      containers:
        - name: tsf-init
          image: "{{ .Values.global.registry.address }}/{{ .Values.global.images.init.repository }}:{{ .Values.global.images.init.tag }}"
          volumeMounts:
          - mountPath: "{{ .Values.global.volumes_root_hostpath.hostPath.path }}"
            name: "{{ .Values.global.volumes_root_hostpath.name }}"
            readOnly: false
          - mountPath: "{{ .Values.global.volumes_data_hostpath.hostPath.path }}"
            name: "{{ .Values.global.volumes_data_hostpath.name }}"
            readOnly: false
          - mountPath: "{{ .Values.global.volumes_fscgroup_hostpath.hostPath.path }}"
            name: "{{ .Values.global.volumes_fscgroup_hostpath.name }}"
            readOnly: true
          imagePullPolicy: {{ .Values.init.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          securityContext:
            privileged: true
          resources:
            {{- toYaml .Values.init.resources | nindent 12 }}
      volumes:
      - name: "{{ .Values.global.volumes_root_hostpath.name }}"
        hostPath:
          path: "{{ .Values.global.volumes_root_hostpath.hostPath.path }}"
          type: DirectoryOrCreate
      - name: "{{ .Values.global.volumes_data_hostpath.name }}"
        hostPath:
          path: "{{ .Values.global.volumes_data_hostpath.hostPath.path }}"
          type: DirectoryOrCreate
      - name: "{{ .Values.global.volumes_fscgroup_hostpath.name }}"
        hostPath:
          path: "{{ .Values.global.volumes_fscgroup_hostpath.hostPath.path }}"
          type: DirectoryOrCreate
      {{- with .Values.init.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.init.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
